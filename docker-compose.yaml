version: '3.8'
services:
  eror_stock_kafka:
    container_name: ${EROR_STOCK_KAFKA}
    image: docker.io/bitnami/kafka:3.5
    # ports:
    #   - "9092:9092"
    # volumes:
    #   - "/docker/data/erorstock/kafka_data:/bitnami"
    environment:
    - KAFKA_CFG_NODE_ID=0
    - KAFKA_CFG_PROCESS_ROLES=controller,broker
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://eror_stock_kafka:9092
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@eror_stock_kafka:9093
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 256M
  eror_stock_mysql:
    image: mysql:latest
    container_name: ${EROR_STOCK_MYSQL}
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: ${MYSQL_PORT}
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 256M
  eror_stock_create_topic:
    image: docker.io/bitnami/kafka:3.5
    depends_on:
    - ${EROR_STOCK_KAFKA}
    deploy:
      resources:
        limits:
          cpus: 0.01
          memory: 50M
    entrypoint: /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server ${KAFKA_HOST}:${KAFKA_PORT} --replication-factor 1 --partitions 1 --topic stock
  eror_stock_producer:
    image: ghcr.io/tejasvedagiri/erorstockproducer:latest
    # build:
    #   context: ./ErorStockProducer/  
    #   dockerfile: Dockerfile 
    container_name: ${EROR_STOCK_PRODUCER}
    environment:
      KAFKA_CLIENT_USERS: ${KAFKA_CLIENT_USERS}
      KAFKA_CLIENT_PASSWORDS: ${KAFKA_CLIENT_PASSWORDS}
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: ${KAFKA_PORT}
      MYSQL_HOSTNAME: ${MYSQL_HOSTNAME}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: ${MYSQL_PORT}
    depends_on:
    - ${EROR_STOCK_KAFKA}
    ports:
    - 9980:80
    deploy:
      resources:
        limits:
          cpus: 0.25
          memory: 256M
  eror_stock_harvester:
    image: ghcr.io/tejasvedagiri/erorstockharvester:latest
    # build:
    #   context: ./ErorStockHarvester/  
    #   dockerfile: Dockerfile  
    container_name: eror_stock_harvester
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PORT: ${MYSQL_PORT}
      KAFKA_CLIENT_USERS: ${KAFKA_CLIENT_USERS}
      KAFKA_CLIENT_PASSWORDS: ${KAFKA_CLIENT_PASSWORDS}
      KAFKA_HOST: ${KAFKA_HOST}
      KAFKA_PORT: 9092
      DEBUG_MODE: ${DEBUG_MODE}
    depends_on:
    - ${EROR_STOCK_KAFKA}
    - ${EROR_STOCK_API}
    - ${EROR_STOCK_MYSQL}
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 512M
  eror_stock_api:
    image: ghcr.io/tejasvedagiri/erorstockapiservices:latest
    # build:
    #   context: ./ErorStockAPIServices/  
    #   dockerfile: Dockerfile  
    container_name: ${EROR_STOCK_API}
    restart: always
    ports:
    - 9012:8080
    depends_on:
    - ${EROR_STOCK_MYSQL}
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOSTNAME: ${MYSQL_HOSTNAME}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      DEBUG_MODE: ${DEBUG_MODE}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SCERET: ${GOOGLE_CLIENT_SCERET}
      FRONTEND_URL: ${FRONTEND_URL}
    deploy:
      resources:
        limits:
          cpus: 0.75
          memory: 256M
  eror_stock_ui:
    image: ghcr.io/tejasvedagiri/erorstockui:latest
    # build:
    #   context: ./ErorStockUI/  
    #   dockerfile: Dockerfile  
    container_name: ${EROR_STOCK_UI}
    restart: always
    ports:
    - 9011:80
    environment:
      REACT_APP_API_ENDPOINT: ${REACT_APP_API_ENDPOINT}
    depends_on:
    - ${EROR_STOCK_API}
    deploy:
      resources:
        limits:
          cpus: 0.5
          memory: 256M
  eror_stock_cron:
    image: ghcr.io/tejasvedagiri/erorstockcron:latest
    # build:
    #   context: ./ErorStockCRON/  
    #   dockerfile: Dockerfile  
    container_name: ${EROR_STOCK_CRON}
    restart: always
    depends_on:
    - ${EROR_STOCK_KAFKA}
    - ${EROR_STOCK_PRODUCER}
    deploy:
      resources:
        limits:
          cpus: 0.2
          memory: 256M
  eror_stock_homepage:
    image: ghcr.io/tejasvedagiri/erorhomepage:latest
    # build:
    #   context: ./ErorHomepage/  
    #   dockerfile: Dockerfile  
    container_name: eror_stock_homepage
    restart: always
    ports:
    - 9010:3000
    deploy:
      resources:
        limits:
          cpus: 0.9
          memory: 512M
  eror_phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    depends_on:
      - ${EROR_STOCK_MYSQL}
    environment:
      PMA_HOST: ${EROR_STOCK_MYSQL}
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
      UPLOAD_LIMIT: 5G
    restart: always
    ports:
      - 9011:80
